# This workflow will build a Java springboot project with Maven, build, publish docker image and cache/restore any dependencies to improve the workflow execution time

name: Java Springboot CI with Maven Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build-Jar
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Upload Build Artifact  
      uses: actions/upload-artifact@v2
      with:
        name: my-artifact
        path: target/

  image:
    name: Build-Image
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Download Build Artifact
      uses: actions/download-artifact@v2
      with:
        name: my-artifact
        path: target/
    - name: Build & push Docker image
      uses: mr-smithers-excellent/docker-build-push@v5
      with:
        image: akolisetty/edn
        tags: latest
        registry: docker.io
        dockerfile: Dockerfile
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

  deploy:
    name: Deploy-to-Kubernetes
    needs: image
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Create kubeconfig
      run: |
        mkdir ${HOME}/.kube
        echo "${{ secrets.KUBE_CONFIG1 }}" > ${HOME}/.kube/config
        cat ${HOME}/.kube/config
    - name: Use context
      run: kubectl config use-context default
    - name: Print current context
      run: kubectl config current-context
    - name: Get Namespaces
      run: kubectl get namespaces   
